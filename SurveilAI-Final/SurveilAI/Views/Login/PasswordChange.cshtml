@model SurveilAI.Models.User

@{
    ViewBag.Title = "PasswordChange";
    Layout = "~/Views/Shared/_Layout - Copy.cshtml";
    string AccType = Session["Role"].ToString();
    string LUrl = "PasswordChange";

}

<div class="content-wrapper">
    <div class="content container">
        <header class="page-header">

            <div class="mr-auto">
                <h1>CHANGE PASSWORD</h1>
            </div>

        </header>
        <section class="page-content">
            <div class="row card">
                <div class="col-md-2"></div>
                <div class="col-md-8  container-fluid">


                    <h5 class="card-header">A strong password helps prevent unauthorized access to your account.</h5>
                    @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post, new { @id = "FPC-form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="card-body">
                            <div class="mb-3">
                                <input type="hidden" value="@AccType" id="h-acctype" />
                                <input type="hidden" value="@LUrl" id="h-lastUrl" />
                                @Html.HiddenFor(m => m.LastUrl, new { })
                                @Html.HiddenFor(m => m.AccountType, new { })
                                <label>Current Password</label>
                                @Html.HiddenFor(m => m.PasswordE)
                                @Html.PasswordFor(m => m.Password, new { placeholder = "Current Password", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                <small style="color:red !important;" class="form-text text-muted">@TempData["errormessage"]</small>

                            </div>
                            <div class="mb-3">
                                <label>New Password</label>
                                @Html.HiddenFor(m => m.newPasswordE)
                                @Html.PasswordFor(m => m.newPassword, new { placeholder = "New Password", id = "newPassword", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.newPassword, "", new { @class = "text-danger" })
                                <br />
                                @Html.HiddenFor(m => m.newPassword2E)
                                @Html.PasswordFor(m => m.newPassword2, new { placeholder = "Re-enter New Password", id = "newPassword2", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.newPassword2, "", new { @class = "text-danger" })
                                <span style="color:#ff5c75 !important;" class="form-text text-muted" id="password2-msg">@TempData["errormessage2"]</span>
                                <small style="color:green !important;" class="form-text text-muted" id="done-msg">@TempData["DoneMsg"]</small>
                            </div>
                        </div>
                        <div class="card-footer bg-light text-center">
                            <button type="submit" class="btn btn-primary" id="FPC-submit">Submit</button>
                            <button type="button" class="btn btn-secondary clear-form">Clear</button>
                        </div>

                    }
                </div>
                <div class="col-md-offset-2"></div>
                <hr />
                <footer class="container-fluid">
                    <p>&copy; @DateTime.Now.Year - DIGEVOL.AI PVT-LTD</p>
                </footer>
            </div>
        </section>
    </div>
    <input type="hidden" id="my-val" value="$#Ipl@innomate#$" />
</div>

<script src="~/lib/crypto-js/crypto-js.js"></script>

<script>
        //Form submit
        $('#FPC-submit').click(function (e) {
            e.preventDefault();
            var Pass1 = $('#Password').val();
            var Pass2 = $('#newPassword').val();
            var Pass3 = $('#newPassword2').val();
            var lVal = $('#my-val').val();
            var cc = CryptoJS.enc.Utf8.parse(lVal);
            Pass1 = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(Pass1), cc,
            {
               keySize: 128 / 8,
               iv: cc,
               mode: CryptoJS.mode.CBC,
               padding: CryptoJS.pad.Pkcs7
            });
            Pass2 = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(Pass2), cc,
            {
               keySize: 128 / 8,
               iv: cc,
               mode: CryptoJS.mode.CBC,
               padding: CryptoJS.pad.Pkcs7
            });
            Pass3 = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(Pass3), cc,
            {
               keySize: 128 / 8,
               iv: cc,
               mode: CryptoJS.mode.CBC,
               padding: CryptoJS.pad.Pkcs7
            });

            var accType = $('#AccountType').val();
                      var Password2 = $('#newPassword2').val();
                        var lVal = $('#my-val').val();
                        var cc = CryptoJS.enc.Utf8.parse(lVal);

                        var enPas = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(Password2), cc,
                        {
                           keySize: 128 / 8,
                           iv: cc,
                           mode: CryptoJS.mode.CBC,
                           padding: CryptoJS.pad.Pkcs7
                            });
                        var pp = "'" + enPas + "'";
                        $.ajax({
                            url: "@Url.Action("PasswordPolicyCheck", "User")",
                            data: { newPassword2: pp, AccountType: accType },
                            type: "Post",
                            dataType: "text",
                            success: function (data) {
                                if (data == "true") {
                                    $('#password2-msg').text("");
                                    $('#Password').val("********");
                                    $('#newPassword').val("********");
                                    $('#newPassword2').val("********");
                                    $('#PasswordE').val(Pass1);
                                    $('#newPasswordE').val(Pass2);
                                    $('#newPassword2E').val(Pass3);
                                    $('#FPC-form').submit();
                                }
                                else {
                                    data = data.replace(/\"/g, "");
                                    if (Password2 != "") {
                                        $('#password2-msg').text(data);
                                    }
                                    else {
                                        $('#password2-msg').text("");
                                        $('#FPC-form').submit();
                                    }
                                }
                            },
                            error: function (data) {

                            }
                        });
        });

                $('#newPassword2').keyup(function () {
                    var Password2 = $('#newPassword2').val();
                    if (Password2 == "") {
                        $('#password2-msg').text("");
                    }
                });

                //Check Password policy
                $('#newPassword2').blur(function () {
                  var accType = $('#AccountType').val();
                  var Password2 = $('#newPassword2').val();
                    var lVal = $('#my-val').val();
                    var cc = CryptoJS.enc.Utf8.parse(lVal);

                    var enPas = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(Password2), cc,
                    {
                       keySize: 128 / 8,
                       iv: cc,
                       mode: CryptoJS.mode.CBC,
                       padding: CryptoJS.pad.Pkcs7
                        });
                    var pp = "'" + enPas + "'";
                    $.ajax({
                        url: "@Url.Action("PasswordPolicyCheck", "User")",
                        data: { newPassword2: pp, AccountType: accType },
                        type: "Post",
                        dataType: "text",
                        success: function (data) {
                            if (data == "true") {
                                $('#password2-msg').text("");
                            }
                            else {
                                data = data.replace(/\"/g, "");
                                if (Password2 != "") {
                                    $('#password2-msg').text(data);
                                }
                                else {
                                    $('#password2-msg').text("");
                                }
                            }
                        },
                        error: function (data) {

                        }
                    });
                });
                $(document).ready(function () {
                    //redirect to dashboard on sucessfull password update
                    if ($('#done-msg').text() == "Password Updated Successfully!") {
                        $('#done-msg').text("Password Updated Successfully!, Redirecting To Dashboard.");
                        window.setTimeout(function () {
                            window.location.href = '@Url.Action("UserDashBoard","User")';
                        }, 2000);
                    }

                    //show counter
                        //var cnt = 5;
                        //var counter = setInterval(function() {
                        //    if (cnt > 0) {
                        //        $('#displayCounter').html(cnt);
                        //        cnt--;
                        //    }
                        //}, 1000);

                    var AccType = $('#h-acctype').val();
                    $('#AccountType').val(AccType);
                    var lUrl = $('#h-lastUrl').val();
                    $('#LastUrl').val("PasswordChange");

                    $("#newPassword2").keyup(function () {
                        if ($('#newPassword2').val() == "" && $('#newPassword').val() == "") {
                            $('#newPassword2').css('border-color', '#dfe7f3');
                            $('#newPassword').css('border-color', '#dfe7f3');
                        }
                        else if ($('#newPassword2').val() == $('#newPassword').val()) {
                            $('#newPassword2').css('border-color', 'green');
                            $('#newPassword').css('border-color', 'green');
                        } else if ($('#newPassword').val() != $('#newPassword2').val()) {
                            $('#newPassword2').css('border-color', 'red');
                            $('#newPassword2').css('border-color', 'red');
                        }
                    });
                    $("#newPassword").keyup(function () {
                        if ($('#newPassword').val() == "" && $('#newPassword2').val() == "") {
                            $('#newPassword2').css('border-color', '#dfe7f3');
                            $('#newPassword').css('border-color', '#dfe7f3');
                        }
                        else if ($('#newPassword2').val() == $('#newPassword').val()) {
                            $('#newPassword2').css('border-color', 'green');
                            $('#newPassword').css('border-color', 'green');
                        } else if ($('#newPassword').val() != $('#p2').val()) {
                            $('#newPassword2').css('border-color', 'red');
                            $('#newPassword').css('border-color', 'red');
                        }
                    });

                });

</script>